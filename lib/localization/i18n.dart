import 'dart:async';

import 'package:flutter/foundation.dart';
import 'package:flutter/material.dart';

// ignore_for_file: non_constant_identifier_names
// ignore_for_file: camel_case_types
// ignore_for_file: prefer_single_quotes

//This file is automatically generated. DO NOT EDIT, all your changes would be lost.
class S implements WidgetsLocalizations {
  const S();

  static const GeneratedLocalizationsDelegate delegate =
      GeneratedLocalizationsDelegate();

  static S of(BuildContext context) => Localizations.of<S>(context, S);

  @override
  TextDirection get textDirection => TextDirection.ltr;

  String get addAwardDateHint => "Add date of award";
  String get addAwardNameHint => "Add award name";
  String get addAwardPlaceHint => "Add award placement";
  String get addAwards => "Add Awards";
  String get addChipHint => "Enter chip number";
  String get addCityHint => "Choose city";
  String get addCountryHint => "Choose country";
  String get addDocumentHint => "Add document";
  String get addDocuments => "Add Documents";
  String get addDog => "Add dog";
  String get addDogNameHint => "Enter dogs name";
  String get addEmailHint => "Enter E-MAIL";
  String get addFatherHint => "Add dogs father";
  String get addFciHint => "ENTER dogs FCI";
  String get addLivingCountryHint => "Choose living country";
  String get addMotherHint => "Add dogs mother";
  String get addPhoneNumberHint => "Enter phone number";
  String get addPhotoHint => "Add photo";
  String get addTitleHint => "Add title";
  String get addType => "Add Type";
  String get age => "age";
  String get allBreeds => "all";
  String get awardDate => "Date of award achievement";
  String get awardName => "Award name";
  String get awardPlace => "Award placement";
  String get back => "back";
  String get boost => "Boost";
  String get breed => "breed";
  String get breedSelection => "Breed selection";
  String get yops_interview => "yops_interview";
  String get buyDog => "Buy dog";
  String get cancel => "Cancel";
  String get championStub => "Ukrainian champion";
  String get chat => "CHAT";
  String get chip => "Chip";
  String get city => "city";
  String get citySelection => "City selection";
  String get comment => "comment";
  String get commentHint => "Enter comment";
  String get contacts => "Contacts";
  String get country => "country";
  String get countrySelection => "Country selection";
  String get currency => "currency";
  String get currentLocation => "Current Location";
  String get dateOfBirth => "Date of birth";
  String get dateOfBirthHint => "Enter date of birth";
  String get doNotWantRegistrationLink => "Back to login page";
  String get documents => "Documents";
  String get documentsPhoto => "Documents photo";
  String get dogBreed => "Dog Breed";
  String get dogBreedHint => "enter breed";
  String get dogInformation => "Dog Information";
  String get dogNameInPedigree => "Dog name in pedigree";
  String get dogPedigree => "Pedigree";
  String get dogsEmptyList => "Here will be your dogs";
  String get dogsEmptyListExplanationFirstLine =>
      "We will show list of your dogs";
  String get dogsEmptyListExplanationSecondLine =>
      "if you still don't have any";
  String get dontHaveAccount => "Don't have account yet?";
  String get edit => "Edit";
  String get email => "E-Mail";
  String get emailEmptyError => "Please enter your email";
  String get facebookLoginButton => "Enter via FACEBOOK";
  String get father => "Father";
  String get favorites => "FAVORITES";
  String get fci => "FCI №";
  String get female => "female";
  String get filter => "filter";
  String get forFree => "For free";
  String get forgotPasswordLink => "Forgot password?";
  String get gender => "gender";
  String get generation => "generation";
  String get generations => "generations";
  String get height => "height";
  String get heightHint => "Add height";
  String get home => "HOME";
  String get homeName => "Home name";
  String get homeNameHint => "Enter home name";
  String get list => "List";
  String get livingCity => "Living city";
  String get livingCountry => "Living country";
  String get loginButton => "log in";
  String get loginEmptyError => "Please enter your login";
  String get loginHint => "login";
  String get male => "male";
  String get mating => "Mating";
  String get motherName => "mother";
  String get myDogs => "MY DOGS";
  String get no => "no";
  String get orSeparator => "Or";
  String get originCountry => "Origin country";
  String get passwordEmptyError => "Please enter your password";
  String get passwordHint => "password";
  String get pedigree => "pedigree";
  String get pedigreeList => "Pedigree list";
  String get phoneNumber => "Phone number";
  String get phoneOrEmail => "Email Or Phone number";
  String get placement => "Placement";
  String get popular => "popular";
  String get price => "price";
  String get profile => "PROFILE";
  String get publish => "Publish";
  String get puppyMetric => "Puppies metric";
  String get recent => "recent";
  String get recoveryFailed => "We can't find that user";
  String get recoverySuccessful => "Password was sent to your e-mail";
  String get registerLink => "Registration";
  String get rememberedPasswordLink => "Remembered password";
  String get removeFromFav => "delete from fav?";
  String get rent => "rent";
  String get reset => "reset";
  String get rewards => "rewards";
  String get sale => "sale";
  String get save => "Save";
  String get search => "Search ...";
  String get sell => "Sell";
  String get sendButton => "Send";
  String get sex => "Sex";
  String get sexDefault => "Woman";
  String get titles => "Awards";
  String get top => "top";
  String get type => "type";
  String get weight => "Weight";
  String get weightHint => "Enter weight";
  String get yes => "yes";
}

class $ru extends S {
  const $ru();

  @override
  TextDirection get textDirection => TextDirection.ltr;

  @override
  String get cancel => "Отмена";
  @override
  String get weightHint => "ВВедите вес";
  @override
  String get passwordHint => "пароль";
  @override
  String get homeName => "Домашняя кличка";
  @override
  String get type => "Тип объявления";
  @override
  String get rent => "rent";
  @override
  String get recoveryFailed => "Пользователь не найден";
  @override
  String get addPhotoHint => "Добавьте фото";
  @override
  String get addAwardPlaceHint => "Добавьте место проведения титула";
  @override
  String get registerLink => "Регистрация";
  @override
  String get mating => "Вязка";
  @override
  String get loginHint => "логин";
  @override
  String get awardPlace => "Место проведения титула";
  @override
  String get addDocuments => "Добавить Документы";
  @override
  String get breedSelection => "Выбор породы";
  @override
  String get price => "Цена";
  @override
  String get addAwardNameHint => "Добавьте название титула";
  @override
  String get recent => "Вы недавно смотрели";
  @override
  String get addMotherHint => "ДОБАВЬТЕ МАТЬ СОБАКИ";
  @override
  String get dateOfBirthHint => "Введите дату рождения";
  @override
  String get height => "рост";
  @override
  String get facebookLoginButton => "Вход при помощи FACEBOOK";
  @override
  String get generation => "Поколениe";
  @override
  String get addCountryHint => "ВЫБЕРИТЕ СТРАНУ";
  @override
  String get edit => "Редактировать";
  @override
  String get profile => "ПРОФИЛЬ";
  @override
  String get addTitleHint => "Добавить титул";
  @override
  String get puppyMetric => "Метрика щенка";
  @override
  String get sexDefault => "Женский";
  @override
  String get sendButton => "Отправить";
  @override
  String get addFatherHint => "ДОБАВЬТЕ ОТЦА СОБАКИ";
  @override
  String get buyDog => "Купить собаку";
  @override
  String get reset => "Сбросить";
  @override
  String get removeFromFav => "удалить из избранного?";
  @override
  String get placement => "МЕСТОНАХОЖДЕНИЕ";
  @override
  String get male => "мужской";
  @override
  String get addFciHint => "ВВЕДИТЕ FCI СОБАКИ";
  @override
  String get gender => "Пол собаки";
  @override
  String get city => "Выбор города";
  @override
  String get save => "Сохранить";
  @override
  String get yops_interview => "yops_interview";
  @override
  String get emailEmptyError => "Пожалуйста, введите свой e-mail";
  @override
  String get myDogs => "МОИ СОБАКИ";
  @override
  String get fci => "№ FCI";
  @override
  String get search => "Поиск ...";
  @override
  String get addLivingCountryHint => "Выберите Страну Проживания";
  @override
  String get livingCountry => "Страна Проживания";
  @override
  String get passwordEmptyError => "Пожалуйста введите пароль";
  @override
  String get top => "Топ объявлений";
  @override
  String get forFree => "Бесплатно";
  @override
  String get currency => "Валюта";
  @override
  String get popular => "Пoпулярные породы";
  @override
  String get email => "E-Mail";
  @override
  String get phoneOrEmail => "Email или номер телефона";
  @override
  String get chip => "Чип";
  @override
  String get sex => "Пол";
  @override
  String get sell => "Продажа";
  @override
  String get addDocumentHint => "Добавить документ";
  @override
  String get dateOfBirth => "Дата Рождения";
  @override
  String get dontHaveAccount => "У вас ещё нет аккаунта?";
  @override
  String get citySelection => "Выбор города";
  @override
  String get filter => "Фильтр";
  @override
  String get sale => "sale";
  @override
  String get livingCity => "Город проживания";
  @override
  String get chat => "ЧАТ";
  @override
  String get dogsEmptyListExplanationSecondLine => "если у Вас еще нет собак";
  @override
  String get doNotWantRegistrationLink => "Назад на страницу авторизации";
  @override
  String get addCityHint => "ВЫБЕРИТЕ ГОРОД";
  @override
  String get contacts => "КОНТАКТЫ";
  @override
  String get country => "Страна происхождения";
  @override
  String get heightHint => "ВВедите рост";
  @override
  String get documentsPhoto => "Фото документов";
  @override
  String get documents => "ДОКУМЕНТЫ";
  @override
  String get generations => "Поколения";
  @override
  String get addEmailHint => "ВВЕДИТЕ E-MAIL";
  @override
  String get awardName => "Название титула";
  @override
  String get addAwardDateHint => "Добавьте дату титула";
  @override
  String get addPhoneNumberHint => "ВВЕДИТЕ НОМЕР ТЕЛЕФОНА";
  @override
  String get homeNameHint => "Введите домашнюю кличку";
  @override
  String get championStub => "Чемпион Украины";
  @override
  String get dogsEmptyList => "Тут будут ваши собаки";
  @override
  String get loginButton => "Вход";
  @override
  String get dogsEmptyListExplanationFirstLine =>
      "Отображение списка Ваших собак";
  @override
  String get female => "женский";
  @override
  String get allBreeds => "Все породы";
  @override
  String get pedigreeList => "СПисок родословной";
  @override
  String get motherName => "Мать";
  @override
  String get weight => "Вес";
  @override
  String get awardDate => "Дата получения титула";
  @override
  String get list => "Список";
  @override
  String get recoverySuccessful => "Пароль был отправлен на ваш e-mail";
  @override
  String get dogNameInPedigree => "Кличка в родословной";
  @override
  String get phoneNumber => "Контактный номер телефона";
  @override
  String get addChipHint => "ВВЕДИТЕ НОМЕР ЧИПА";
  @override
  String get favorites => "ИЗБРАННЫЕ";
  @override
  String get no => "нет";
  @override
  String get father => "Отец";
  @override
  String get back => "Назад";
  @override
  String get addAwards => "Добавить титулы";
  @override
  String get loginEmptyError => "Пожалуйста введите логин";
  @override
  String get forgotPasswordLink => "Забыли пароль?";
  @override
  String get orSeparator => "Или";
  @override
  String get commentHint => "ВВедите комментарий";
  @override
  String get yes => "да";
  @override
  String get dogPedigree => "Родословная";
  @override
  String get dogBreedHint => "Введите породу";
  @override
  String get titles => "ТИТУЛЫ";
  @override
  String get addDogNameHint => "Введите кличку";
  @override
  String get breed => "Порода собак";
  @override
  String get addDog => "Добавить собаку";
  @override
  String get home => "ГЛАВНАЯ";
  @override
  String get currentLocation => "Текущее местоположение";
  @override
  String get rememberedPasswordLink => "Вспомнил пароль";
  @override
  String get addType => "Тип объявления";
  @override
  String get publish => "Опубликовать";
  @override
  String get originCountry => "Страна Происхождения";
  @override
  String get comment => "Комментарий";
  @override
  String get dogBreed => "Порода собаки";
  @override
  String get countrySelection => "Выбор страны";
  @override
  String get dogInformation => "Информация о собаке";
  @override
  String get age => "Возраст";
}

class $en extends S {
  const $en();
}

class GeneratedLocalizationsDelegate extends LocalizationsDelegate<S> {
  const GeneratedLocalizationsDelegate();

  List<Locale> get supportedLocales {
    return const <Locale>[
      Locale("ru", ""),
      Locale("en", ""),
    ];
  }

  LocaleListResolutionCallback listResolution({Locale fallback}) {
    return (List<Locale> locales, Iterable<Locale> supported) {
      if (locales == null || locales.isEmpty) {
        return fallback ?? supported.first;
      } else {
        return _resolve(locales.first, fallback, supported);
      }
    };
  }

  LocaleResolutionCallback resolution({Locale fallback}) {
    return (Locale locale, Iterable<Locale> supported) {
      return _resolve(locale, fallback, supported);
    };
  }

  Locale _resolve(Locale locale, Locale fallback, Iterable<Locale> supported) {
    if (locale == null || !isSupported(locale)) {
      return fallback ?? supported.first;
    }

    final Locale languageLocale = Locale(locale.languageCode, "");
    if (supported.contains(locale)) {
      return locale;
    } else if (supported.contains(languageLocale)) {
      return languageLocale;
    } else {
      final Locale fallbackLocale = fallback ?? supported.first;
      return fallbackLocale;
    }
  }

  @override
  Future<S> load(Locale locale) {
    final String lang = getLang(locale);
    if (lang != null) {
      switch (lang) {
        case "ru":
          return SynchronousFuture<S>(const $ru());
        case "en":
          return SynchronousFuture<S>(const $en());
        default:
        // NO-OP.
      }
    }
    return SynchronousFuture<S>(const S());
  }

  @override
  bool isSupported(Locale locale) =>
      locale != null && supportedLocales.contains(locale);

  @override
  bool shouldReload(GeneratedLocalizationsDelegate old) => false;
}

String getLang(Locale l) => l == null
    ? null
    : l.countryCode != null && l.countryCode.isEmpty
        ? l.languageCode
        : l.toString();
